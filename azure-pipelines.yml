# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- feature-ms-EnriqueMoraga-mensaje

jobs:
- job: job1
  pool:
    vmImage: ubuntu-latest

  steps:
    - script: |
        git fetch --unshallow
      displayName: 'convert to non-shallow clone' 

    - task: Gradle@3
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'build jacocoTestReport'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        sonarQubeRunAnalysis: false
        spotBugsAnalysis: false
      displayName: Build

    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: 'JaCoCo'
        summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/reports/jacoco/test/jacocoTestReport.xml'
        pathToSources: '$(System.DefaultWorkingDirectory)/src/main/java/'
        reportDirectory: '$(System.DefaultWorkingDirectory)/build/reports/jacoco/test'
        failIfCoverageEmpty: true
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'Conexion'
        organization: 'devopsfundv4emc-microservicio-spring'
        projectName: 'microservicio-spring'
        projectKey: 'DevOpsFundV4EMC_microservicio-spring'
      displayName: 'SonarCloud Prepare'
    - task: Gradle@3
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'sonarqube'
        publishJUnitResults: false
        javaHomeOption: 'JDKVersion'
        sonarQubeRunAnalysis: true
        sqGradlePluginVersionChoice: 'specify'
        sonarQubeGradlePluginVersion: '3.5.0.2730'
        spotBugsAnalysis: false
      displayName: Ejecucion Sonar

    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        command: 'login'
    
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        repository: 'enriquemoraaga/microservicio-spring'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: |
                $(Build.BuildId)
                latest
    
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        repository: 'enriquemoraaga/microservicio-spring'
        command: 'push'
        tags: |
              $(Build.BuildId)
              latest

- job: job2
  dependsOn: job1
  pool: 'Default'
  steps:
  - task: Kubernetes@1
    inputs:
        connectionType: 'None'
        command: 'apply'
        arguments: '--force -f deployment-app.yaml'
    displayName: 'kubectl port-forward'

  - task: PowerShell@2
    inputs:
        targetType: 'inline'
        script: |
          Start-Process "kubectl" -ArgumentList "port-forward service/lab-service 8080:8080" -WindowStyle Hidden
    displayName: 'kubectl port-forward'
    continueOnError: true

  - task: CmdLine@2
    inputs:
        script: |
            jmeter -n -t test-plan.jmx -l resultados.jtl
    displayName: 'Run JMeter'