# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- feature-ms-alexisRodriguez-mensaje

pool:
  vmImage: ubuntu-latest

steps:


- task: Gradle@3
  inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false
  displayName: Build
- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'SonarCloud'
    organization: 'mostwanted001'
    scannerMode: CLI
    configMode: file
    cliprojectKey: 'mostwanted001_microservicio-spring'
    projectName: 'microservicio-spring'
    extraProperties:'sonar.coverage.jacoco.xmlReportPaths=$(Agent.TempDirectory)/jacocoTestReport/jacocoTestReport.xml'
  displayName: 'SonarCloud Prepare'
  
- task: Gradle@3
  displayName: 'Run test'
  inputs:
    workingDirectory: '$(Build.SourcesDirectory)'
    gradleWrapperFile: 'gradlew'
    gradleOptions: 'Xmx3072m'
    tasks: clean test jacocoTest Report
- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonar'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.5.0.2730'
    spotBugsAnalysis: false
 
- task: Docker@2
  inputs:
      containerRegistry: 'Docker'
      command: 'login'
  
- task: Docker@2
  inputs:
      containerRegistry: 'Docker'
      repository: 'mostwanted0001/microservicio-spring'
      command: 'build'
      Dockerfile: '**/Dockerfile'
  
- task: Docker@2
  inputs:
      containerRegistry: 'Docker'
      repository: 'mostwanted0001/microservicio-spring'
      command: 'push'