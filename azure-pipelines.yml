# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- feature-ms-EnriqueMoraga-mensaje

pool:
  vmImage: ubuntu-latest

steps:
- script: |
      git fetch --unshallow
  displayName: 'convert to non-shallow clone' 

- task: Gradle@3
  inputs:
      gradleWrapperFile: 'gradlew'
      tasks: 'build jacocoTestReport'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'
      javaHomeOption: 'JDKVersion'
      sonarQubeRunAnalysis: false
      spotBugsAnalysis: false
  displayName: Build

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'JaCoCo'
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/build/reports/jacoco/test/jacocoTestReport.xml'
    pathToSources: '$(System.DefaultWorkingDirectory)/src/main/java/'
    reportDirectory: '$(System.DefaultWorkingDirectory)/build/reports/jacoco/test'
    failIfCoverageEmpty: true

- task: SonarCloudPrepare@1
  inputs:
    SonarCloud: 'Conexion'
    organization: 'devopsfundv4emc-microservicio-spring'
    scannerMode: 'MSBuild'
    projectKey: 'devopsfundv4emc-microservicio-spring'
    projectName: 'microservicio-spring'
  displayName: 'SonarCloud Prepare'
- task: Gradle@3
  displayName: 'Run test'
  inputs:
    gradleWrapperFile: 'gradlew'
    workingDirectory: '$(Build.SourcesDirectory)'
    tasks: 'clean test jacocoTestReport'
    publishJUnitResults: true
    testResultsFiles: '*/TEST-.xml'
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: false
    spotBugsAnalysis: false

- task: Gradle@3
  inputs:
    gradleWrapperFile: 'gradlew'
    tasks: 'sonar'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    sonarQubeRunAnalysis: true
    sqGradlePluginVersionChoice: 'specify'
    sonarQubeGradlePluginVersion: '3.3'
    spotBugsAnalysis: false
 
- task: Docker@2
  inputs:
      containerRegistry: 'Docker'
      command: 'login'
  
- task: Docker@2
  inputs:
      containerRegistry: 'Docker'
      repository: 'DevOpsFundV4EMC/microservicio-spring'
      command: 'build'
      Dockerfile: '**/Dockerfile'
  
- task: Docker@2
  inputs:
      containerRegistry: 'Docker'
      repository: 'DevOpsFundV4EMC/microservicio-spring'
      command: 'push'
