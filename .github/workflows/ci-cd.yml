name: CI/CD Trabajo Final
on: [workflow_dispatch, push]
concurrency: ci-app-${{ github.ref }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build

    - name: Test with Gradle
      run: ./gradlew test

    - name: Publish Unit Test Results
      uses: actions/upload-artifact@v2
      with:
        name: unit-test-results
        path: '**/build/reports/tests/test/index.html'

    - name: Code Quality and Security
      run: ./gradlew sonarqube -Dsonar.projectKey=ruben-pro-cl_feature-ms-RubenOlivares-mensaje -Dsonar.organization=ruben-pro-cl -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=${{ secrets.SONAR_TOKEN }}

    - name: Archive production artifacts
      uses: actions/upload-artifact@v2
      with:
        name: build-artifacts
        path: build/libs/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts
        path: build/libs/

    - name: List build/libs contents
      run: ls -l build/libs/

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      
    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        load: true # Esto cargará la imagen en el entorno del runner
        tags: trabajo-final:latest # Reemplaza "your-app-name" con el nombre de tu aplicación
      
    - name: Run Docker Container
      run: |
            docker run -d -p 8080:8080 trabajo-final:latest
